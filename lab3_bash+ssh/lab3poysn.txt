Архивация - запихиваем несколько файлов 1 и сжимаем
Сжатие - уменьшения размера каждого файла по отдельности



Основные опции tar

Создание нового архива выполняется следующей строчкой кода:
tar <функции> archive.tar <архивируемые файлы>

Распаковка файлов тоже выполняется просто:
tar <функции> <имя архива>

tar -cf <наименование будущего архива с расширением .tar> <имя архивируемого файла>

-A, --concatenate – позволяет добавить уже существующий архив к другому;
-c, --create – создает новый архив и записывает в него файлы;
-d – расшифровывается как -diff или -delete, где первая команда проверяет различия между архивами, вторая – удаляет данных из архива;
-r, append – добавляет новые файлы в конец заархивированного документа;
-t, --list – разрешает посмотреть содержимое архива, формат аналогичен ls –l; если файлы не указаны, то выводит информацию обо всех файлах;
-u, --update – обновление файлов в созданном архиве с тем же наименованием;
-x, --extract – распаковывает файлы из заархивированного документа.

команду для разархивации:

tar -xvf archive.tar

Gzip: 
без всего - замена исходного
-k - 
-c > Newfile.gz - 
-d - разжимает
-v - процесс загрузки
-r dr - сжимает директорию
-dr - расжимает директорию

-f



=======================================VIM=================
$ vim опции имя_файла

Можно применить следующие опции:

-R — открыть в режиме «‎только чтение»‎;
-g — включить графический режим;
-w — сохранить все действия в файл;
-b — воспользоваться двоичным режимом, чтобы редактировать исполняемые файлы;
-x — активировать шифрование файла при записи;
-d — найти различия в файлах (потребуется указать несколько файлов для открытия);
-C — включить режим совместимости с Vi;
-n — отключить функцию автоматического сохранения для восстановления файла при ошибке;
«‎+команда»‎ — эта опция отвечает за выполнение команды после запуска редактора;
+номер — перемещение курсора к определённой пользователем строке после запуска;
+/шаблон — найти нужный участок в шаблоне и переместить курсор к его началу.


==================================================================================

CRLF

Маркер последовательности байтов

========================================================================




Программа iconv служит для переконвертирования файлов из одной кодировки в другую.



Узнать, какие кодировки доступны, можно командой



iconv --list



Наиболее часто используемые кодировки - CP1251, KOI8-R, UTF-8, UTF-16.



Синтаксис команды следующий



iconv -f KOI8-R -t CP1251 file.txt



- эта команда будет перекодировать файл file.txt из KOI8-R в CP1251, и результат будет выводить в консоль.



iconv -f KOI8-R -t CP1251 file.txt -o outfile.txt



- эта команда будет перекодировать файл file.txt в файл outfile.txt.



Внимание! В качестве выходного файла нельзя указывать исходный файл, так как в этом случае исходный файл будет обнулен. Для того чтобы переконвертировать файл, не создавая новый файл, можно использовать команду вида



iconv -f KOI8-R -t CP1251 file -o tmpfile && mv tmpfile file



Пример скрипта, который переконвертирует файлы в директории и её поддиректориях:



f=`find . -name \*.cpp -or -name \*.c -or -name \*.h`



for file in $f

do



 iconv -f KOI8-R -t UTF8 $file -o tmpfile && mv tmpfile $file



done


