Ошибки на стадиях компиляции:

1) Препроцессор - это макро процессор, который преобразовывает вашу программу для дальнейшего компилирования. На данной стадии происходит происходит работа с препроцессорными директивами. Например, препроцессор добавляет хэдеры в код (#include), убирает комментирования, заменяет макросы (#define) их значениями, выбирает нужные куски кода в соответствии с условиями #if, #ifdef и #ifndef.

gcc -E -std=c99 -pedantic -Wall 8.1.c

gсс -E driver.c -o driver.ii

ошибки: нерправильное написание #include или не сущ include


2) Компиляция - преобразует полученный на прошлом шаге код без директив в ассемблерный код. Это промежуточный шаг между высокоуровневым языком и машинным (бинарным) кодом.

gcc -S driver.ii -o driver.s

ошибки: синтаксические ошибки либо обявление 2 функций и 2 переменных 


3) Ассемблирование
Ассемблер преобразовывает ассемблерный код в машинный код, сохраняя его в объектном файле.

Объектный файл — это созданный ассемблером промежуточный файл, хранящий кусок машинного кода. Этот кусок машинного кода, который еще не был связан вместе с другими кусками машинного кода в конечную выполняемую программу, называется объектным кодом.


Далее возможно сохранение данного объектного кода в статические библиотеки для того, чтобы не компилировать данный код снова.

 as driver.s -o driver.o
 
ошибки:

4) Компоновка/Линковка 

Компоновщик (линкер) связывает все объектные файлы и статические библиотеки в единый исполняемый файл, который мы и сможем запустить в дальнейшем. 

gсс driver.o -o driver

ошибки:


Запуск - ./driver 
