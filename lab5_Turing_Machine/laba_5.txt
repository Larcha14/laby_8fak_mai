00, ,<,mvl1
mvl1,0,<,mvl1
mvl1,1,<,mvl1
mvl1, ,>,cop1

cop1,0,>,cop1
cop1, ,>,cop3
cop3, ,0,cop3
cop3,0,>,cop4
cop4, , ,cop4

cop1,1,>,pr

pr, ,>,end1
pr,0, ,pr0
pr,1, ,pr5

end1, ,0,end11
end11,0,>,end11
end11, , ,end11


pr0, ,>,pr01
pr01,0,>,pr01
pr01,1,>,pr01
pr01, ,>,pr02
pr02, ,1,plus2

pr04,0,<,pr04
pr04,1,<,pr04
pr04, ,0,pr05
pr05,0,>,pr06
pr06, ,>,pr07
pr06,0, ,pr0

pr02,1,>,pr09
pr09,1,>,pr09
pr09,0,>,pr09
pr09, ,<,plus1

plus1,0,1,plus2
plus2,1,<,plus2
plus2,0,<,plus2
plus2, ,<,pr04

plus1,1,0,plus4
plus4,0,<,plus1
plus1, ,>,plus5
plus5,0,1,plus6
plus6,0,>,plus6
plus6,1,>,plus6
plus6, ,0,plus2



pr06,1, ,pr08
pr08, ,>,pr11

pr11,0,>,pr11
pr11,1,>,pr11
pr11, ,>,pr13
pr13,1,>,pr13
pr13,0,>,pr13
pr13, ,<,plus31

pr14,0,<,pr14
pr14,1,<,pr14
pr14, ,1,pr15
pr15,1,>,pr06

plus31,0,1,plus32
plus32,1,<,plus32
plus32,0,<,plus32
plus32, ,<,pr14

plus31,1,0,plus34
plus34,0,<,plus31
plus31, ,>,plus35
plus35,0,1,plus36
plus36,0,>,plus36
plus36,1,>,plus36
plus36, ,0,plus32


pr07, , ,pr07
pr07,1,>,pr07
pr07,0,>,pr07




pr5, ,>,pr51
pr51,0,>,pr51
pr51,1,>,mk91
pr51, ,>,pr52
pr52, ,1,plus32

mk91,0,>,mk91
mk91,1,>,mk91
mk91, ,>,mk92
mk92, ,1,mk93
mk93,1,>,mk93
mk93, ,0,plus32




Пояснения
Mvl1- первое движение влево 
Изначально мы должны проверить наличие незнащачих нулей перед числом и не является само это число 0

cop1 – подготовка к подсчёту и проверка на незначащие нули,
cop3, cop4 – завершают работу МТ, если до этого были все незначащие нули


я решал задачу таким методом, что если число не явл. степенью 2-ки, то огругляем его, т.е. если число проверяю положение числа относительно его положения между двумя числами, чвл. степенями 2, и если это число <= среднему из этих двух крайних чисел, то округляем в меньшую сторону, иначе в большую. Например:

log2(2)==log2(10)==1
log3(3)==log2(11)==1

log2(4)==log2(100)==2(10)
log2(8)==log2(1000)==3(11)

log2(5)==log2(101)==2(10)
log2(6)==log2(110)==2(10)
log2(7)==log2(111)==3(11)

=> мы будем проверять 2 первых числа, если они единицы, то ищем 1 после них, если находим, то округляем в большую, иначе - в меньшую

Первую 1 мы пропускаем, т.к лог в меньшую сторону = длина -1

pr - начало выполнения команды
end1, end11 - завершают цикл, если была введена 1 с незнач нулями или без



pr0 - начало цикла, если первые два числа: 10 с незнач нулями или без, начинается простой подсчет чисел
pr5 - начало цикла, если первые два числа: 11 с незнач нулями или без

pr51-52 - программа, если не встречается 1, округление в меньшую сторону
mk91-93 - программа, если после 2 первых единичек встретиться 1, что будет означать, что мы округляем в большую сторону: т.е.  log2(x) будет равен длине введеного числа

pr01-07+09 - подсчет длины, если после 2 цифры встречается 0
pr08, 10-15 - подсчет длины, если после 2 цифры встречается 1

plus1-6 - прибавление к длине 1 и последущее возвращение 0 на место
plus31-36 - прибавление к длине 1 и последущее возвращение 1 на место

pr08, 10-15 - подсчет длины, если после 2 цифры встречается 1

pr06 -показывает, стоит ли там 0 или 1


pr07 - завершает цикл

Примеры:

Ввод:                Результат:
 00000000                  0
 0000001                   0
 000000100011            101
 000000111001            110
 0000001100               11
 11                        1
 100                      10
 10000001                111
 111                      11
 110                      10
 
 
